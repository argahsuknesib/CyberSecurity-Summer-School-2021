package _m_j;

import _m_j.brr;
import android.content.Context;
import android.os.Bundle;
import android.text.TextUtils;
import com.amap.api.location.AMapLocation;
import com.amap.api.location.AMapLocationClientOption;
import com.amap.api.location.DPoint;
import com.loc.t;
import java.util.HashMap;
import java.util.List;
import java.util.Locale;
import org.json.JSONObject;

public final class bvz {

    /* renamed from: O000000o  reason: collision with root package name */
    static String f13327O000000o = "http://apilocate.amap.com/mobile/binary";
    static String O00000Oo = "";
    public static String O00000o = null;
    static String O00000o0 = "001;11B;11C;11F;11G;11H;11I;11K;122;135;13J;13S;14S;157;15O;15U;16P";
    public static String O00000oO = null;
    public static int O00000oo = 30000;
    public static String O0000O0o = null;
    public static String O0000OOo = null;
    static HashMap<String, String> O0000Oo;
    static String O0000Oo0;
    static boolean O0000OoO = false;
    static boolean O0000Ooo = false;
    private static brr O0000o0 = null;
    private static final String[] O0000o00 = {"com.amap.api.location", "com.loc", "com.amap.api.fence"};
    private static boolean O0000o0O = false;
    private static boolean O0000o0o = false;

    public static Bundle O000000o(AMapLocationClientOption aMapLocationClientOption) {
        Bundle bundle = new Bundle();
        if (aMapLocationClientOption == null) {
            aMapLocationClientOption = new AMapLocationClientOption();
        }
        try {
            bundle.putParcelable("opt", aMapLocationClientOption);
        } catch (Throwable th) {
            O000000o(th, "CoreUtil", "getOptionBundle");
        }
        return bundle;
    }

    /* JADX WARNING: No exception handlers in catch block: Catch:{  } */
    public static AMapLocation O000000o(AMapLocation aMapLocation, AMapLocation aMapLocation2) {
        if (aMapLocation2 == null) {
            return aMapLocation;
        }
        try {
            aMapLocation.setCountry(aMapLocation2.getCountry());
            aMapLocation.setRoad(aMapLocation2.getRoad());
            aMapLocation.setPoiName(aMapLocation2.getPoiName());
            aMapLocation.setStreet(aMapLocation2.getStreet());
            aMapLocation.setNumber(aMapLocation2.getStreetNum());
            String cityCode = aMapLocation2.getCityCode();
            String adCode = aMapLocation2.getAdCode();
            aMapLocation.setCityCode(cityCode);
            aMapLocation.setAdCode(adCode);
            aMapLocation.setCity(aMapLocation2.getCity());
            aMapLocation.setDistrict(aMapLocation2.getDistrict());
            aMapLocation.setProvince(aMapLocation2.getProvince());
            aMapLocation.setAoiName(aMapLocation2.getAoiName());
            aMapLocation.setAddress(aMapLocation2.getAddress());
            aMapLocation.setDescription(aMapLocation2.getDescription());
            if (aMapLocation.getExtras() != null) {
                aMapLocation.getExtras().putString("citycode", aMapLocation2.getCityCode());
                aMapLocation.getExtras().putString("desc", aMapLocation2.getExtras().getString("desc"));
                aMapLocation.getExtras().putString("adcode", aMapLocation2.getAdCode());
            } else {
                Bundle bundle = new Bundle();
                bundle.putString("citycode", aMapLocation2.getCityCode());
                bundle.putString("desc", aMapLocation2.getExtras().getString("desc"));
                bundle.putString("adcode", aMapLocation2.getAdCode());
                aMapLocation.setExtras(bundle);
            }
        } catch (Throwable unused) {
        }
        return aMapLocation;
    }

    public static AMapLocationClientOption O000000o(Bundle bundle) {
        AMapLocationClientOption aMapLocationClientOption = new AMapLocationClientOption();
        if (bundle == null) {
            return aMapLocationClientOption;
        }
        try {
            bundle.setClassLoader(AMapLocationClientOption.class.getClassLoader());
            return (AMapLocationClientOption) bundle.getParcelable("opt");
        } catch (Throwable th) {
            O000000o(th, "CoreUtil", "getOptionFromBundle");
            return aMapLocationClientOption;
        }
    }

    public static String O000000o() {
        return f13327O000000o;
    }

    public static void O000000o(Context context) {
        try {
            if (brs.O00000Oo(context)) {
                f13327O000000o = "http://abroad.apilocate.amap.com/mobile/binary";
                return;
            }
            if (O0000Oo == null) {
                O0000Oo = new HashMap<>(16);
            }
            O0000Oo.clear();
            O0000Oo.put("a9a9d23668a1a7ea93de9b21d67e436a", "F13160D440C7D0229DA95450F66AF92154AC84DF088F8CA3100B2E8131D57F3DC67124D4C466056E7A3DFBE035E1B9A4B9DA4DB68AE65A43EDFD92F5C60EF0C9");
            O0000Oo.put("fe643c382e5c3b3962141f1a2e815a78", "FB923EE67A8B4032DAA517DD8CD7A26FF7C25B0C3663F92A0B61251C4FFFA858DF169D61321C3E7919CB67DF8EFEC827");
            O0000Oo.put("b2e8bd171989cb2c3c13bd89b4c1067a", "239CE372F804D4BE4EAFFD183668379BDF274440E6F246AB16BBE6F5D1D30DEACFBBF0C942485727FF12288228760A9E");
            O0000Oo.put("9a571aa113ad987d626c0457828962e6", "D2FF99A88BEB04683D89470D4FA72B1749DA456AB0D0F1A476477CE5A6874F53A9106423D905F9D808C0FCE8E7F1E04AC642F01FE41D0C7D933971F45CBA72B7");
            O0000Oo.put("668319f11506def6208d6afe320dfd52", "53E53D46011A6BBAEA4FAE5442E659E0577CDD336F930C28635C322FB3F51C3C63F7FBAC9EAE448DFA2E5E5D716C4807");
            O0000Oo.put("256b0f26bb2a9506be6cfdb84028ae08", "AF2228680EDC323FBA035362EB7E1E38A0C33E1CF6F6FB805EE553A230CBA754CD9552EB9B546542CBE619E8293151BE");
            String O000000o2 = bvo.O000000o(bwt.O00000oo(context));
            O0000Oo0 = O000000o2;
            if (O000000o2 != null) {
                try {
                    if (O000000o2.length() != 0) {
                        if (O0000Oo != null && O0000Oo.containsKey(O000000o2)) {
                            String str = O0000Oo.get(O000000o2);
                            String str2 = null;
                            if (str != null && str.length() > 0) {
                                str2 = new String(bvo.O00000o(O000000o(str), O000000o2), "utf-8");
                            }
                            if (str2 != null && str2.length() > 0 && str2.contains("http:")) {
                                O00000Oo = str2;
                                f13327O000000o = str2;
                            }
                        }
                    }
                } catch (Throwable th) {
                    O000000o(th, "CoreUtil", "checkUrl");
                }
            }
        } catch (Throwable th2) {
            O000000o(th2, "CoreUtil", "checkUrl");
        }
    }

    /* JADX WARNING: Can't wrap try/catch for region: R(17:3|4|5|(3:6|7|(1:9))|10|(3:12|13|(1:15))|16|18|19|(1:21)|22|23|24|(2:26|27)(2:29|(1:33)(3:32|34|35))|28|34|35) */
    /* JADX WARNING: Missing exception handler attribute for start block: B:22:0x0077 */
    /* JADX WARNING: Removed duplicated region for block: B:26:0x0192 A[SYNTHETIC, Splitter:B:26:0x0192] */
    /* JADX WARNING: Removed duplicated region for block: B:29:0x019a A[Catch:{ Throwable -> 0x01c7 }] */
    public static void O000000o(AMapLocation aMapLocation, JSONObject jSONObject) {
        String str;
        if (jSONObject != null) {
            try {
                double optDouble = jSONObject.optDouble("lat", aMapLocation.getLatitude());
                double optDouble2 = jSONObject.optDouble("lon", aMapLocation.getLongitude());
                aMapLocation.setProvider(jSONObject.optString("provider", aMapLocation.getProvider()));
                aMapLocation.setLatitude(optDouble);
                aMapLocation.setLongitude(optDouble2);
                aMapLocation.setAltitude(jSONObject.optDouble("altitude", aMapLocation.getAltitude()));
                try {
                    String optString = jSONObject.optString("accuracy");
                    if (!TextUtils.isEmpty(optString)) {
                        aMapLocation.setAccuracy(Float.parseFloat(optString));
                    }
                } catch (Throwable unused) {
                }
                try {
                    String optString2 = jSONObject.optString("speed");
                    if (!TextUtils.isEmpty(optString2)) {
                        aMapLocation.setSpeed(Float.parseFloat(optString2));
                    }
                } catch (Throwable unused2) {
                }
                String optString3 = jSONObject.optString("bearing");
                if (!TextUtils.isEmpty(optString3)) {
                    aMapLocation.setBearing(Float.parseFloat(optString3));
                }
                aMapLocation.setAdCode(jSONObject.optString("adcode", aMapLocation.getAdCode()));
                aMapLocation.setCityCode(jSONObject.optString("citycode", aMapLocation.getCityCode()));
                aMapLocation.setAddress(jSONObject.optString("address", aMapLocation.getAddress()));
                String optString4 = jSONObject.optString("desc", "");
                aMapLocation.setCountry(jSONObject.optString("country", aMapLocation.getCountry()));
                aMapLocation.setProvince(jSONObject.optString("province", aMapLocation.getProvince()));
                aMapLocation.setCity(jSONObject.optString("city", aMapLocation.getCity()));
                aMapLocation.setDistrict(jSONObject.optString("district", aMapLocation.getDistrict()));
                aMapLocation.setRoad(jSONObject.optString("road", aMapLocation.getRoad()));
                aMapLocation.setStreet(jSONObject.optString("street", aMapLocation.getStreet()));
                aMapLocation.setNumber(jSONObject.optString("number", aMapLocation.getStreetNum()));
                aMapLocation.setPoiName(jSONObject.optString("poiname", aMapLocation.getPoiName()));
                aMapLocation.setAoiName(jSONObject.optString("aoiname", aMapLocation.getAoiName()));
                aMapLocation.setErrorCode(jSONObject.optInt("errorCode", aMapLocation.getErrorCode()));
                aMapLocation.setErrorInfo(jSONObject.optString("errorInfo", aMapLocation.getErrorInfo()));
                aMapLocation.setLocationType(jSONObject.optInt("locationType", aMapLocation.getLocationType()));
                aMapLocation.setLocationDetail(jSONObject.optString("locationDetail", aMapLocation.getLocationDetail()));
                aMapLocation.setTime(jSONObject.optLong("time", aMapLocation.getTime()));
                boolean optBoolean = jSONObject.optBoolean("isOffset", aMapLocation.isOffset());
                aMapLocation.setOffset(optBoolean);
                aMapLocation.setBuildingId(jSONObject.optString("poiid", aMapLocation.getBuildingId()));
                aMapLocation.setFloor(jSONObject.optString("floor", aMapLocation.getFloor()));
                aMapLocation.setDescription(jSONObject.optString("description", aMapLocation.getDescription()));
                if (!jSONObject.has("coordType")) {
                    str = jSONObject.optString("coordType", "GCJ02");
                } else if (!O000000o(optDouble, optDouble2) || !optBoolean) {
                    str = "WGS84";
                } else {
                    aMapLocation.setCoordType("GCJ02");
                    Bundle bundle = new Bundle();
                    bundle.putString("citycode", aMapLocation.getCityCode());
                    bundle.putString("desc", optString4.toString());
                    bundle.putString("adcode", aMapLocation.getAdCode());
                    aMapLocation.setExtras(bundle);
                }
                aMapLocation.setCoordType(str);
                Bundle bundle2 = new Bundle();
                bundle2.putString("citycode", aMapLocation.getCityCode());
                bundle2.putString("desc", optString4.toString());
                bundle2.putString("adcode", aMapLocation.getAdCode());
                aMapLocation.setExtras(bundle2);
            } catch (Throwable th) {
                O000000o(th, "CoreUtil", "transformLocation");
            }
        }
    }

    public static void O000000o(Throwable th, String str, String str2) {
        if (!"reportError".equals(str2) && !(th instanceof t)) {
            try {
                bsf.O00000Oo(th, str, str2);
            } catch (Throwable unused) {
            }
        }
    }

    public static boolean O000000o(double d, double d2) {
        int i = (int) ((d2 - 73.0d) / 0.5d);
        int i2 = (int) ((d - 3.5d) / 0.5d);
        if (i2 < 0 || i2 >= 101 || i < 0 || i >= 124) {
            return false;
        }
        try {
            returncharAt((i2 * 124) + i) == '1';
        } catch (Throwable th) {
            O000000o(th, "CoreUtil", "isChina");
            return true;
        }
    }

    private static boolean O000000o(double d, double d2, double d3, double d4, double d5, double d6) {
        return Math.abs(((d3 - d) * (d6 - d2)) - ((d5 - d) * (d4 - d2))) < 1.0E-9d && (d - d3) * (d - d5) <= 0.0d && (d2 - d4) * (d2 - d6) <= 0.0d;
    }

    /* JADX WARNING: Removed duplicated region for block: B:43:0x00f8 A[SYNTHETIC] */
    public static boolean O000000o(DPoint dPoint, List<DPoint> list) {
        boolean z;
        List<DPoint> list2 = list;
        double longitude = dPoint.getLongitude();
        double latitude = dPoint.getLatitude();
        double latitude2 = dPoint.getLatitude();
        if (!list2.get(0).equals(list2.get(list.size() - 1))) {
            list2.add(list2.get(0));
        }
        int i = 0;
        int i2 = 0;
        while (i < list.size() - 1) {
            double longitude2 = list2.get(i).getLongitude();
            double latitude3 = list2.get(i).getLatitude();
            int i3 = i + 1;
            double longitude3 = list2.get(i3).getLongitude();
            double latitude4 = list2.get(i3).getLatitude();
            int i4 = i3;
            if (O000000o(longitude, latitude, longitude2, latitude3, longitude3, latitude4)) {
                return true;
            }
            double d = latitude4 - latitude3;
            if (Math.abs(d) >= 1.0E-9d) {
                if (O000000o(longitude2, latitude3, longitude, latitude, 180.0d, latitude2)) {
                    if (latitude3 <= latitude4) {
                    }
                } else if (!O000000o(longitude3, latitude4, longitude, latitude, 180.0d, latitude2)) {
                    double d2 = longitude3 - longitude2;
                    double d3 = latitude2 - latitude;
                    double d4 = 180.0d - longitude;
                    double d5 = (d2 * d3) - (d * d4);
                    if (d5 != 0.0d) {
                        double d6 = latitude3 - latitude;
                        double d7 = longitude2 - longitude;
                        double d8 = ((d4 * d6) - (d3 * d7)) / d5;
                        double d9 = ((d6 * d2) - (d7 * d)) / d5;
                        if (d8 >= 0.0d && d8 <= 1.0d && d9 >= 0.0d && d9 <= 1.0d) {
                            z = true;
                            if (!z) {
                            }
                        }
                    }
                    z = false;
                    if (!z) {
                    }
                } else if (latitude4 <= latitude3) {
                }
                i2++;
            }
            i = i4;
        }
        return i2 % 2 != 0;
    }

    private static byte[] O000000o(String str) {
        if (str == null || str.length() < 2) {
            return new byte[0];
        }
        String lowerCase = str.toLowerCase(Locale.US);
        int length = lowerCase.length() / 2;
        byte[] bArr = new byte[length];
        for (int i = 0; i < length; i++) {
            int i2 = i * 2;
            bArr[i] = (byte) (bwi.O0000OOo(lowerCase.substring(i2, i2 + 2)) & 255);
        }
        return bArr;
    }

    public static String O00000Oo(Context context) {
        return brp.O000000o(bwt.O00000oO(context));
    }

    public static boolean O00000o() {
        if (!O0000OoO) {
            O0000OoO = true;
            O0000Ooo = false;
        }
        return O0000Ooo;
    }

    public static String O00000o0() {
        return O00000o0;
    }

    public static void O00000o0(Context context) {
        try {
            if (brs.O00000Oo(context)) {
                f13327O000000o = "http://abroad.apilocate.amap.com/mobile/binary";
            } else if (TextUtils.isEmpty(O00000Oo)) {
                f13327O000000o = "http://apilocate.amap.com/mobile/binary";
            } else {
                f13327O000000o = O00000Oo;
            }
        } catch (Throwable th) {
            O000000o(th, "CoreUtil", "changeUrl");
        }
    }

    public static brr O00000Oo() {
        try {
            if (O0000o0 == null) {
                brr.O000000o O000000o2 = new brr.O000000o("loc", "4.7.1", "AMAP_Location_SDK_Android 4.7.1").O000000o((String[]) O0000o00.clone());
                O000000o2.O00000Oo = "4.7.1";
                O0000o0 = O000000o2.O000000o();
            }
        } catch (Throwable th) {
            O000000o(th, "CoreUtil", "getSDKInfo");
        }
        return O0000o0;
    }
}
